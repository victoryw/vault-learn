/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'victoryw' at '5/15/17 11:49 PM' with Gradle 3.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
plugins {
    id 'org.springframework.boot' version '1.5.3.RELEASE'
    id 'java'
    id 'idea'
    id 'application'
    id "checkstyle"
    id "io.spring.dependency-management" version "1.0.2.RELEASE"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'spring-vault-learn'
    version = '0.0.1'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-vault-dependencies:1.0.1.RELEASE'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // Start: Spring Boot Web
    compile('org.springframework.boot:spring-boot-starter-web')
    // End: Spring Boot Web

    compile("org.springframework.cloud:spring-cloud-vault-config-databases")
    compile 'org.springframework.cloud:spring-cloud-starter-vault-config'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
